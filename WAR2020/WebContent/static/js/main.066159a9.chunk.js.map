{"version":3,"sources":["logo.svg","components/login/styles.js","components/login/login.js","components/register/styles.js","components/register/register.js","components/newChat/styles.js","components/newChat/newChat.js","components/chatList/styles.js","components/chatList/chatList.js","components/chatView/styles.js","components/chatView/chatView.js","components/chatTextBox/styles.js","components/chatTextBox/chatTextBox.js","components/dashboard/styles.js","components/dashboard/dashboard.js","App.js","index.js"],"names":["module","exports","styles","theme","main","width","display","marginLeft","spacing","unit","marginRight","breakpoints","up","paper","marginTop","flexDirection","alignItems","padding","form","submit","hasAccountHeader","logInLink","textDecoration","color","fontWeight","errorText","textAlign","Login","userTyping","whichInput","event","setState","email","target","value","password","submitLogin","e","preventDefault","user","username","state","console","log","axios","post","then","res","localStorage","setItem","props","history","push","catch","err","alert","serverError","classes","this","className","CssBaseline","Paper","Typography","component","variant","onSubmit","FormControl","required","fullWidth","margin","InputLabel","htmlFor","Input","autoComplete","autoFocus","onChange","id","type","Button","noAccountHeader","signUpLink","to","React","Component","withStyles","Register","passwordConfirmation","formIsValid","submitSignup","signupError","position","top","left","input","NewChatComponent","inputType","message","submitNewChat","a","userExists","chatExists","goToChat","createChat","sender","getItem","text","get","response","data","receiver","buildDocKey","sort","join","newChatSubmitFn","sendTo","goToChatFn","chat","exists","root","backgroundColor","palette","background","height","boxShadow","listItem","cursor","newChatBtn","borderRadius","unreadMessage","right","ChatListComponent","userIsSender","messages","length","userEmail","newChat","newChatBtnFn","selectChat","index","selectChatFn","chats","onClick","List","map","_chat","_index","key","ListItem","selected","selectedChatIndex","ListItemAvatar","Avatar","alt","participants","filter","_user","split","ListItemText","primary","secondary","Fragment","substring","receiverHasRead","ListItemIcon","Divider","content","overflow","boxSizing","overflowY","userSent","float","clear","wordWrap","friendSent","chatHeader","fontSize","paddingTop","ChatViewComponent","componentDidMount","container","document","getElementById","scrollTo","scrollHeight","componentDidUpdate","undefined","_usr","_msg","date","toString","sendBtn","chatTextBoxContainer","bottom","chatTextBox","ChatTextBoxComponent","keyCode","submitMessage","chatText","messageValid","txt","replace","userClickedInput","userClickedInputFn","submitMessageFn","TextField","placeholder","onKeyUp","onFocus","signOutBtn","loggedInBtn","registeredBtn","DashboardComponent","signOut","delete","removeItem","loggedIn","registered","msg","friend","newChatBtnClicked","newChatFormVisible","selectedChat","newChatSubmit","chatObj","chatIndex","messageRead","docKey","usersInChat","find","every","users","includes","indexOf","clickedMessageWhereNotSender","friends","loggedInUser","new_uri","loc","window","location","protocol","host","pathname","client","websocket","WebSocket","url","onopen","onmessage","evt","onclose","withRouter","App","basename","exact","path","Dashboard","ReactDOM","render"],"mappings":"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","file":"static/js/main.066159a9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","const styles = theme => ({\r\n    main: {\r\n      width: 'auto',\r\n      display: 'block', // Fix IE 11 issue.\r\n      marginLeft: theme.spacing.unit * 3,\r\n      marginRight: theme.spacing.unit * 3,\r\n      [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\r\n        width: 400,\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n      },\r\n    },\r\n    paper: {\r\n      marginTop: theme.spacing.unit * 8,\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\r\n    },\r\n    form: {\r\n      width: '100%',\r\n      marginTop: theme.spacing.unit,\r\n    },\r\n    submit: {\r\n      marginTop: theme.spacing.unit * 3,\r\n    },\r\n    hasAccountHeader: {\r\n      width: '100%'\r\n    },\r\n    logInLink: {\r\n      width: '100%',\r\n      textDecoration: 'none',\r\n      color: '#303f9f',\r\n      fontWeight: 'bolder'\r\n    },\r\n    errorText: {\r\n      color: 'red',\r\n      textAlign: 'center'\r\n    }\r\n  });\r\n  \r\n  export default styles;","import { Link } from 'react-router-dom';\r\nimport React from 'react';\r\nimport styles from './styles';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Input from '@material-ui/core/Input';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from 'axios'\r\n\r\nclass Login extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: null,\r\n      password: null,\r\n      serverError: false\r\n    };\r\n  }\r\n\r\n  render() {\r\n\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <main className={classes.main}>\r\n        <CssBaseline/>\r\n        <Paper className={classes.paper}>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Welcome to Chat App\r\n          </Typography>\r\n          <form onSubmit={(e) => this.submitLogin(e)} className={classes.form}>\r\n            <FormControl required fullWidth margin='normal'>\r\n              <InputLabel htmlFor='login-email-input'>Username</InputLabel>\r\n              <Input autoComplete='email' autoFocus onChange={(e) => this.userTyping('email', e)} id='login-email-input'></Input>\r\n            </FormControl>\r\n            <FormControl required fullWidth margin='normal'>\r\n              <InputLabel htmlFor='login-password-input'>Password</InputLabel>\r\n              <Input autoComplete=\"current-password\" type=\"password\" onChange={(e) => this.userTyping('password', e)} id='login-password-input'></Input>\r\n            </FormControl>\r\n            <Button type='submit' fullWidth variant='contained' color='primary' className={classes.submit}>Log In</Button>\r\n          </form>\r\n          { this.state.serverError ? \r\n            <Typography className={classes.errorText} component='h5' variant='h6'>\r\n              Incorrect Login Information\r\n            </Typography> :\r\n            null\r\n          }\r\n          <h5 className={classes.noAccountHeader}>Don't Have An Account? <Link className={classes.signUpLink} to='/register'><b>Register</b></Link></h5>\r\n        </Paper>\r\n      </main>\r\n    );\r\n  }\r\n\r\n  userTyping = (whichInput, event) => {\r\n    switch (whichInput) {\r\n      case 'email':\r\n        this.setState({ email: event.target.value });\r\n        break;\r\n\r\n      case 'password':\r\n        this.setState({ password: event.target.value });\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  submitLogin = (e) => {\r\n    e.preventDefault();\r\n\r\n    var user = {username: this.state.email, password: this.state.password}\r\n    console.log(user)\r\n    const url = process.env.NODE_ENV === 'production' ? \"rest/chat/users/login\" : \"http://localhost:8080/WAR2020/rest/chat/users/login\"\r\n    axios.post(url, user)\r\n    .then(res => {\r\n      localStorage.setItem('loginInfo', this.state.email)\r\n      this.props.history.push('/dashboard')\r\n    })\r\n    .catch(err => (alert(\"Wrong username/password\"), console.log(err)));\r\n  };\r\n\r\n}\r\n\r\nexport default withStyles(styles)(Login);","const styles = theme => ({\r\n    main: {\r\n      width: 'auto',\r\n      display: 'block', // Fix IE 11 issue.\r\n      marginLeft: theme.spacing.unit * 3,\r\n      marginRight: theme.spacing.unit * 3,\r\n      [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\r\n        width: 400,\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n      },\r\n    },\r\n    paper: {\r\n      marginTop: theme.spacing.unit * 8,\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\r\n    },\r\n    form: {\r\n      width: '100%',\r\n      marginTop: theme.spacing.unit,\r\n    },\r\n    submit: {\r\n      marginTop: theme.spacing.unit * 3,\r\n    },\r\n    hasAccountHeader: {\r\n      width: '100%'\r\n    },\r\n    logInLink: {\r\n      width: '100%',\r\n      textDecoration: 'none',\r\n      color: '#303f9f',\r\n      fontWeight: 'bolder'\r\n    },\r\n    errorText: {\r\n      color: 'red',\r\n      textAlign: 'center'\r\n    }\r\n  });\r\n  \r\n  export default styles;","import { Link } from 'react-router-dom';\r\nimport React from 'react';\r\nimport styles from './styles';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Input from '@material-ui/core/Input';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from 'axios'\r\n\r\nclass Register extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: null,\r\n      password: null,\r\n      passwordConfirmation: null,\r\n      signupError: ''\r\n    };\r\n  }\r\n\r\n  render() {\r\n\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <main className={classes.main}>\r\n        <CssBaseline/>\r\n        <Paper className={classes.paper}>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Register a Chat App Account\r\n          </Typography>\r\n          <form onSubmit={(e) => this.submitSignup(e)} className={classes.form}>\r\n            <FormControl required fullWidth margin='normal'>\r\n              <InputLabel htmlFor='signup-email-input'>Username</InputLabel>\r\n              <Input autoComplete='email' autoFocus onChange={(e) => this.userTyping('email', e)} id='signup-email-input'></Input>\r\n            </FormControl>\r\n            <FormControl required fullWidth margin='normal'>\r\n              <InputLabel htmlFor='signup-password-input'>Password</InputLabel>\r\n              <Input type=\"password\" onChange={(e) => this.userTyping('password', e)} id='signup-password-input'></Input>\r\n            </FormControl>\r\n            <FormControl required fullWidth margin='normal'>\r\n              <InputLabel htmlFor='signup-password-confirmation-input'>Confirm Password</InputLabel>\r\n              <Input type=\"password\" onChange={(e) => this.userTyping('passwordConfirmation', e)} id='signup-password-confirmation-input'></Input>\r\n            </FormControl>\r\n            <Button type='submit' fullWidth variant='contained' color='primary' className={classes.submit}>Submit</Button>\r\n          </form>\r\n          { \r\n            this.state.signupError ? \r\n            <Typography className={classes.errorText} component='h5' variant='h6'>\r\n              {this.state.signupError}\r\n            </Typography> :\r\n            null\r\n          }\r\n          <h5 className={classes.hasAccountHeader}>Already Have An Account? <Link className={classes.logInLink} to='/login'><b>Log In</b></Link></h5>\r\n        </Paper>\r\n      </main>\r\n    );\r\n  }\r\n\r\n  userTyping = (whichInput, event) => {\r\n    switch (whichInput) {\r\n      case 'email':\r\n        this.setState({ email: event.target.value });\r\n        break;\r\n\r\n      case 'password':\r\n        this.setState({ password: event.target.value });\r\n        break;\r\n\r\n      case 'passwordConfirmation':\r\n        this.setState({ passwordConfirmation: event.target.value });\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  formIsValid = () => this.state.password === this.state.passwordConfirmation;\r\n\r\n  submitSignup = (e) => {\r\n    e.preventDefault(); // This is to prevent the automatic refreshing of the page on submit.\r\n\r\n    if(!this.formIsValid()) {\r\n      this.setState({ signupError: 'Passwords do not match' });\r\n      alert(\"Passwords do not match!\")\r\n      return;\r\n    }\r\n\r\n    const url = process.env.NODE_ENV === 'production' ? \"rest/chat/users/register\" : \"http://localhost:8080/WAR2020/rest/chat/users/register\"\r\n    axios.post(url, {username: this.state.email, password: this.state.password})\r\n    .then(res => {\r\n      alert(\"Succesfull registration!\")\r\n      this.props.history.push('/login');\r\n    })\r\n    .catch(err => alert(\"User already exists\"));\r\n  };\r\n}\r\n\r\nexport default withStyles(styles)(Register);","const styles = theme => ({\r\n  main: {\r\n    width: 'auto',\r\n    display: 'block', // Fix IE 11 issue.\r\n    marginLeft: theme.spacing.unit * 3,\r\n    marginRight: theme.spacing.unit * 3,\r\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\r\n      width: 400,\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n    },\r\n  },\r\n  paper: {\r\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\r\n    position: 'absolute',\r\n    width: '350px',\r\n    top: '50px',\r\n    left: 'calc(50% + 150px - 175px)'\r\n  },\r\n  input: {\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginTop: theme.spacing.unit,\r\n  },\r\n  submit: {\r\n    marginTop: theme.spacing.unit * 3\r\n  },\r\n  errorText: {\r\n    color: 'red',\r\n    textAlign: 'center'\r\n  }\r\n});\r\n\r\nexport default styles;","import React from 'react';\r\nimport { FormControl, InputLabel, Input, Button, Paper, withStyles, CssBaseline, Typography } from '@material-ui/core';\r\nimport styles from './styles';\r\nimport axios from 'axios'\r\n\r\nclass NewChatComponent extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: null,\r\n      message: null\r\n    };\r\n  }\r\n\r\n  render() {\r\n\r\n    const { classes } = this.props;\r\n\r\n    return(\r\n      <main className={classes.main}>\r\n        <CssBaseline/>\r\n        <Paper className={classes.paper}>\r\n          <Typography component=\"h1\" variant=\"h5\">Send A Message!</Typography>\r\n          <form className={classes.form} onSubmit={(e) => this.submitNewChat(e)}>\r\n            <FormControl fullWidth>\r\n              <InputLabel htmlFor='new-chat-username'>\r\n                  Friend's Username (*if you want to send to all)\r\n              </InputLabel>\r\n              <Input required \r\n                className={classes.input}\r\n                autoFocus \r\n                onChange={(e) => this.userTyping('username', e)} \r\n                id='new-chat-username'>\r\n              </Input>\r\n            </FormControl>\r\n            <FormControl fullWidth>\r\n              <InputLabel htmlFor='new-chat-message'>\r\n                  Message\r\n              </InputLabel>\r\n              <Input required \r\n                className={classes.input}\r\n                onChange={(e) => this.userTyping('message', e)} \r\n                id='new-chat-message'>\r\n              </Input>\r\n            </FormControl>\r\n            <Button fullWidth variant='contained' color='primary' className={classes.submit} type='submit'>Send</Button>\r\n          </form>\r\n          {\r\n            this.state.serverError ? \r\n            <Typography component='h5' variant='h6' className={classes.errorText}>\r\n              Unable to locate the user\r\n            </Typography> :\r\n            null\r\n          }\r\n        </Paper>\r\n      </main>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n  }\r\n\r\n  userTyping = (inputType, e) => {\r\n    switch (inputType) {\r\n      case 'username':\r\n        this.setState({ username: e.target.value });\r\n        break;\r\n      \r\n      case 'message':\r\n        this.setState({ message: e.target.value });\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  submitNewChat = async (e) => {\r\n    e.preventDefault();\r\n    const userExists = await this.userExists();\r\n    if(userExists) {\r\n      const chatExists = await this.chatExists();\r\n      chatExists ? this.goToChat() : this.createChat();\r\n    }\r\n\r\n    var sender = localStorage.getItem('loginInfo');\r\n\r\n    if (sender === this.state.username){\r\n      alert(\"Haha Speaking with Yourself!\")\r\n      return\r\n    }\r\n\r\n    if (this.state.username === \"*\"){\r\n      const url = process.env.NODE_ENV === 'production' ? \"rest/chat/messages/allUsers\" : \"http://localhost:8080/WAR2020/rest/chat/messages/allUsers\"\r\n      axios.post(url, {sender: sender, text: this.state.message})\r\n    .then(res => {\r\n      alert('Message sent! Please refresh the page (WebSocket errors bugs still not solved)')\r\n    })\r\n    .catch(err => (alert(\"Error\"), console.log(err)));\r\n    }\r\n    else {\r\n    const urlExists = process.env.NODE_ENV === 'production' ? \"rest/chat/users/exists/\" : \"http://localhost:8080/WAR2020/rest/chat/users/exists/\"\r\n    axios.get(urlExists + this.state.username)\r\n    .then(response => {\r\n      console.log(response.data);\r\n      if (response.data === \"no\"){\r\n        alert(\"User doesn't exist!\")\r\n        return\r\n      }\r\n      else {\r\n        const urlUser = process.env.NODE_ENV === 'production' ? \"rest/chat/messages/user\" : \"http://localhost:8080/WAR2020/rest/chat/messages/user\"\r\n\r\n        axios.post(urlUser, {sender: sender, receiver: this.state.username, text: this.state.message})\r\n        .then(res => {\r\n          alert('Message sent! Please refresh the page (WebSocket errors bugs still not solved)')\r\n        })\r\n        .catch(err => (alert(\"Error\"), console.log(err)));\r\n      }\r\n    });\r\n    }\r\n  }\r\n\r\n  buildDocKey = () => [true, this.state.username].sort().join(':');\r\n\r\n  createChat = () => {\r\n    this.props.newChatSubmitFn({\r\n      sendTo: this.state.username,\r\n      message: this.state.message\r\n    });\r\n  }\r\n\r\n  goToChat = () => this.props.goToChatFn(this.buildDocKey(), this.state.message);\r\n\r\n  chatExists = async () => {\r\n    const docKey = this.buildDocKey();\r\n    const chat = await \r\n    console.log(chat.exists);\r\n    return chat.exists;\r\n  }\r\n  userExists = async () => {\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(NewChatComponent);","const styles = theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    height: 'calc(100% - 35px)',\r\n    position: 'absolute',\r\n    left: '0',\r\n    width: '300px',\r\n    boxShadow: '0px 0px 2px black'\r\n  },\r\n  listItem: {\r\n    cursor: 'pointer'\r\n  },\r\n  newChatBtn: {\r\n    borderRadius: '0px'\r\n  },\r\n  unreadMessage: {\r\n    color: 'red',\r\n    position: 'absolute',\r\n    top: '0',\r\n    right: '5px'\r\n  }\r\n});\r\n\r\nexport default styles;","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport styles from './styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Button from '@material-ui/core/Button';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport NotificationImportant from '@material-ui/icons/NotificationImportant';\r\n\r\nclass ChatListComponent extends React.Component {\r\n\r\n  render() {\r\n\r\n    const { classes } = this.props;\r\n\r\n    if(this.props.chats.length > 0) {\r\n      return(\r\n        <div className={classes.root}>\r\n            <Button variant=\"contained\" \r\n              fullWidth \r\n              color='primary' \r\n              onClick={this.newChat} \r\n              className={classes.newChatBtn}>\r\n                New Message\r\n            </Button>\r\n            <List>\r\n              {\r\n                this.props.chats.map((_chat, _index) => {\r\n                  return (\r\n                    <div key={_index}>\r\n                      <ListItem onClick={() => this.selectChat(_index)} \r\n                        className={classes.listItem} \r\n                        selected={this.props.selectedChatIndex === _index} \r\n                        alignItems=\"flex-start\">\r\n                        <ListItemAvatar>\r\n                          <Avatar alt=\"Remy Sharp\">{_chat.participants.filter(_user => _user !== this.props.userEmail)[0].split('')[0]}</Avatar>\r\n                        </ListItemAvatar>\r\n                        <ListItemText \r\n                          primary={_chat.participants.filter(_user => _user !== this.props.userEmail)[0]}\r\n                          secondary={\r\n                            <React.Fragment>\r\n                              <Typography component='span'\r\n                                color='textPrimary'>\r\n                                  {_chat.messages[_chat.messages.length - 1].text.substring(0, 30) + ' ...'}\r\n                              </Typography>\r\n                            </React.Fragment>\r\n                          }/>\r\n                          {\r\n                            _chat.receiverHasRead === false && !this.userIsSender(_chat) ? \r\n                            <ListItemIcon><NotificationImportant className={classes.unreadMessage}></NotificationImportant></ListItemIcon> :\r\n                            null\r\n                          }\r\n                      </ListItem>\r\n                      <Divider/>\r\n                    </div>\r\n                  )\r\n                })\r\n              }\r\n            </List>\r\n        </div>\r\n      );\r\n    } else {\r\n      console.log(\"else\");\r\n      return(\r\n        <div className={classes.root}>\r\n          <Button variant=\"contained\" \r\n            fullWidth \r\n            color='primary' \r\n            onClick={this.newChat} \r\n            className={classes.newChatBtn}>\r\n              New Message\r\n          </Button>\r\n          <List></List>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  userIsSender = (chat) => chat.messages[chat.messages.length - 1].sender === this.props.userEmail;\r\n  newChat = () => this.props.newChatBtnFn();\r\n  selectChat = (index) => this.props.selectChatFn(index);\r\n\r\n  componentDidMount(){\r\n    console.log(this.props.chats)\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(ChatListComponent);","const styles = theme => ({\r\n\r\n  content: {\r\n    height: 'calc(100vh - 100px)',\r\n    overflow: 'auto',\r\n    padding: '25px',\r\n    marginLeft: '300px',\r\n    boxSizing: 'border-box',\r\n    overflowY: 'scroll',\r\n    top: '50px',\r\n    width: 'calc(100% - 300px)',\r\n    position: 'absolute'\r\n  },\r\n\r\n  userSent: {\r\n    float: 'right',\r\n    clear: 'both',\r\n    padding: '20px',\r\n    boxSizing: 'border-box',\r\n    wordWrap: 'break-word',\r\n    marginTop: '10px',\r\n    backgroundColor: '#707BC4',\r\n    color: 'white',\r\n    width: '300px',\r\n    borderRadius: '10px'\r\n  },\r\n\r\n  friendSent: {\r\n    float: 'left',\r\n    clear: 'both',\r\n    padding: '20px',\r\n    boxSizing: 'border-box',\r\n    wordWrap: 'break-word',\r\n    marginTop: '10px',\r\n    backgroundColor: '#707BC4',\r\n    color: 'white',\r\n    width: '300px',\r\n    borderRadius: '10px'\r\n  },\r\n\r\n  chatHeader: {\r\n    width: 'calc(100% - 301px)',\r\n    height: '50px',\r\n    backgroundColor: '#344195',\r\n    position: 'fixed',\r\n    marginLeft: '301px',\r\n    fontSize: '18px',\r\n    textAlign: 'center',\r\n    color: 'white',\r\n    paddingTop: '10px',\r\n    boxSizing: 'border-box'\r\n  }\r\n\r\n});\r\n\r\nexport default styles;","import React from 'react';\r\nimport styles from './styles';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nclass ChatViewComponent extends React.Component {\r\n\r\n  componentDidMount = () => {\r\n    const container = document.getElementById('chatview-container');\r\n    if(container)\r\n      container.scrollTo(0, container.scrollHeight);\r\n  }\r\n  componentDidUpdate = () => {\r\n    const container = document.getElementById('chatview-container');\r\n    if(container)\r\n      container.scrollTo(0, container.scrollHeight);\r\n  }\r\n\r\n  render() {\r\n\r\n    const { classes } = this.props;\r\n\r\n    if(this.props.chat === undefined) {\r\n      return(<main className={classes.content}></main>);\r\n    } else if(this.props.chat !== undefined) {\r\n      return(\r\n        <div>\r\n          <div className={classes.chatHeader}>\r\n            Your conversation with {this.props.chat.participants.filter(_usr => _usr !== this.props.user)[0]}\r\n          </div>\r\n          <main id='chatview-container' className={classes.content}>\r\n            {\r\n              this.props.chat.messages.map((_msg, _index) => {\r\n                return(\r\n                <div key={_index} className={_msg.sender === this.props.user ? classes.userSent : classes.friendSent}>\r\n                  {_msg.text}\r\n                  <br></br>\r\n                  <small><i>{_msg.date.toString()}</i></small>\r\n                </div>\r\n                )\r\n              })\r\n            }\r\n          </main>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (<div className='chatview-container'>Loading...</div>);\r\n    }\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(ChatViewComponent);","const styles = theme => ({\r\n\r\n  sendBtn: {\r\n    color: 'blue',\r\n    cursor: 'pointer',\r\n    '&:hover': {\r\n      color: 'gray'\r\n    }\r\n  },\r\n\r\n  chatTextBoxContainer: {\r\n    position: 'absolute',\r\n    bottom: '15px',\r\n    left: '315px',\r\n    boxSizing: 'border-box',\r\n    overflow: 'auto',\r\n    width: 'calc(100% - 300px - 50px)'\r\n  },\r\n\r\n  chatTextBox: {\r\n    width: 'calc(100% - 25px)'\r\n  }\r\n\r\n});\r\n\r\nexport default styles;","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Send from '@material-ui/icons/Send';\r\nimport styles from './styles';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport axios from 'axios'\r\n\r\nclass ChatTextBoxComponent extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      chatText: ''\r\n    };\r\n  }\r\n\r\n  render() {\r\n\r\n    const { classes } = this.props;\r\n\r\n    return(\r\n      <div className={classes.chatTextBoxContainer}>\r\n        <TextField\r\n          placeholder='Type your message..' \r\n          onKeyUp={(e) => this.userTyping(e)}\r\n          id='chattextbox' \r\n          className={classes.chatTextBox}\r\n          onFocus={this.userClickedInput}>\r\n        </TextField>\r\n        <Send onClick={this.submitMessage} className={classes.sendBtn}></Send>\r\n      </div>\r\n    );\r\n  }\r\n  userTyping = (e) => e.keyCode === 13 ? this.submitMessage() : this.setState({ chatText: e.target.value });\r\n  messageValid = (txt) => txt && txt.replace(/\\s/g, '').length;\r\n  userClickedInput = () => this.props.userClickedInputFn();\r\n  submitMessage = () => {\r\n    if(this.messageValid(this.state.chatText)) {\r\n      this.props.submitMessageFn(this.state.chatText);\r\n      document.getElementById('chattextbox').value = '';\r\n    }\r\n    \r\n    console.log(\"batica \" + this.props.receiver)\r\n    const url = process.env.NODE_ENV === 'production' ? \"rest/chat/messages/user\" : \"http://localhost:8080/WAR2020/rest/chat/messages/user\"\r\n    axios.post(url, {sender: localStorage.getItem('loginInfo'), receiver: this.props.receiver, text: this.state.chatText})\r\n        .then(res => {\r\n        })\r\n        .catch(err => (alert(\"Error\"), console.log(err)));\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(ChatTextBoxComponent);","const styles = theme => ({\r\n  signOutBtn: {\r\n    position: 'absolute',\r\n    bottom: '0px',\r\n    left: '0px',\r\n    width: '300px',\r\n    borderRadius: '0px',\r\n    backgroundColor: '#227092',\r\n    height: '35px',\r\n    boxShadow: '0px 0px 2px black',\r\n    color: 'white'\r\n  },\r\n  loggedInBtn: {\r\n    position: 'absolute',\r\n    bottom: '70px',\r\n    left: '0px',\r\n    width: '300px',\r\n    borderRadius: '0px',\r\n    backgroundColor: '#227092',\r\n    height: '35px',\r\n    boxShadow: '0px 0px 2px black',\r\n    color: 'white'\r\n  },  \r\n  registeredBtn: {\r\n    position: 'absolute',\r\n    bottom: '35px',\r\n    left: '0px',\r\n    width: '300px',\r\n    borderRadius: '0px',\r\n    backgroundColor: '#227092',\r\n    height: '35px',\r\n    boxShadow: '0px 0px 2px black',\r\n    color: 'white'\r\n  }\r\n});\r\n\r\nexport default styles;","import React from 'react';\r\nimport NewChatComponent from '../newChat/newChat';\r\nimport ChatListComponent from '../chatList/chatList';\r\nimport ChatViewComponent from '../chatView/chatView';\r\nimport ChatTextBoxComponent from '../chatTextBox/chatTextBox';\r\nimport styles from './styles';\r\nimport { Button, withStyles } from '@material-ui/core';\r\nimport axios from 'axios'\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass DashboardComponent extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      selectedChat: null,\r\n      newChatFormVisible: false,\r\n      email: null,\r\n      friends: [],\r\n      chats: [],\r\n      user: {}\r\n      };\r\n  }\r\n\r\n  websocket;\r\n\r\n  render() {\r\n    console.log(\"User: \" + localStorage.getItem('loginInfo'))\r\n\r\n    const { classes } = this.props;\r\n\r\n    var loggedInUser = localStorage.getItem(\"loginInfo\")\r\n    if(loggedInUser) {\r\n      return(\r\n        <div className='dashboard-container' id='dashboard-container'>\r\n          <ChatListComponent history={this.props.history} \r\n            userEmail={loggedInUser} \r\n            selectChatFn={this.selectChat} \r\n            chats={this.state.chats}\r\n            selectedChatIndex={this.state.selectedChat}\r\n            newChatBtnFn={this.newChatBtnClicked}>\r\n          </ChatListComponent>\r\n          {\r\n            this.state.newChatFormVisible ? null : <ChatViewComponent \r\n              user={loggedInUser} \r\n              chat={this.state.chats[this.state.selectedChat]}>\r\n            </ChatViewComponent>\r\n          }\r\n          { \r\n            this.state.selectedChat !== null && !this.state.newChatFormVisible ? <ChatTextBoxComponent userClickedInputFn={this.messageRead} submitMessageFn={this.submitMessage} receiver={this.state.chats[this.state.selectedChat].participants.filter(_usr => _usr !== localStorage.getItem('loginInfo'))[0]}></ChatTextBoxComponent> : null \r\n          }\r\n          {\r\n            this.state.newChatFormVisible ? <NewChatComponent goToChatFn={this.goToChat} newChatSubmitFn={this.newChatSubmit}></NewChatComponent> : null\r\n          }\r\n          <Button onClick={this.loggedIn} className={classes.loggedInBtn}>Logged In Users</Button>\r\n          <Button onClick={this.registered} className={classes.registeredBtn}>Registered Users</Button>\r\n          <Button onClick={this.signOut} className={classes.signOutBtn}>Sign Out</Button>\r\n        </div>\r\n      );\r\n    } else {\r\n      return(<div>You can't access this page without logging in!</div>);\r\n    }\r\n  }\r\n\r\n  signOut = () => {\r\n    const url = process.env.NODE_ENV === 'production' ? \"rest/chat/users/loggedIn/\" : \"http://localhost:8080/WAR2020/rest/chat/users/loggedIn/\"\r\n    axios.delete(url + localStorage.getItem('loginInfo'))\r\n    .then(response => {\r\n      alert('Log out successful');\r\n    });\r\n    localStorage.removeItem('loginInfo');\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  loggedIn = () => {\r\n    const url = process.env.NODE_ENV === 'production' ? \"rest/chat/users/loggedIn\" : \"http://localhost:8080/WAR2020/rest/chat/users/loggedIn\"\r\n    axios.get(url)\r\n    .then(response => {\r\n      alert(\"Check WildFly to see logged in users.\")\r\n    });\r\n  };\r\n\r\n  registered = () => {\r\n    const url = process.env.NODE_ENV === 'production' ? \"rest/chat/users/registered\" : \"http://localhost:8080/WAR2020/rest/chat/users/registered\"\r\n    axios.get(url)\r\n    .then(response => {\r\n      alert(\"Check WildFly to see registered users.\")\r\n    });\r\n  };\r\n\r\n  submitMessage = (msg) => {\r\n  }\r\n\r\n  // Always in alphabetical order:\r\n  // 'user1:user2'\r\n  buildDocKey = (friend) => [this.state.email, friend].sort().join(':');\r\n\r\n  newChatBtnClicked = () => this.setState({ newChatFormVisible: true, selectedChat: null });\r\n\r\n  newChatSubmit = async (chatObj) => {\r\n  }\r\n\r\n  selectChat = async (chatIndex) => {\r\n    await this.setState({ selectedChat: chatIndex, newChatFormVisible: false });\r\n    this.messageRead();\r\n  }\r\n\r\n  goToChat = async (docKey, msg) => {\r\n    const usersInChat = docKey.split(':');\r\n    const chat = this.state.chats.find(_chat => usersInChat.every(_user => _chat.users.includes(_user)));\r\n    this.setState({ newChatFormVisible: false });\r\n    await this.selectChat(this.state.chats.indexOf(chat));\r\n    this.submitMessage(msg);\r\n  }\r\n\r\n  // Chat index could be different than the one we are currently on in the case\r\n  // that we are calling this function from within a loop such as the chatList.\r\n  // So we will set a default value and can overwrite it when necessary.\r\n  messageRead = () => {\r\n    const chatIndex = this.state.selectedChat;\r\n    const docKey = this.buildDocKey(this.state.chats[chatIndex].participants.filter(_usr => _usr !== localStorage.getItem(\"loginInfo\"))[0]);\r\n    if(this.clickedMessageWhereNotSender(chatIndex)) {\r\n    } else {\r\n      console.log('Clicked message where the user was the sender');\r\n    }\r\n  }\r\n\r\n  clickedMessageWhereNotSender = (chatIndex) => this.state.chats[chatIndex].messages[this.state.chats[chatIndex].messages.length - 1].sender !== localStorage.getItem(\"loginInfo\");\r\n\r\n  componentWillMount() {\r\n\r\n    var loc = window.location, new_uri;\r\n    if (loc.protocol === \"https:\") {\r\n            new_uri = \"wss:\";\r\n    } else {\r\n            new_uri = \"ws:\";\r\n    }\r\n    new_uri += \"//\" + loc.host;\r\n    new_uri += loc.pathname + \"ws/\";\r\n    console.log(new_uri);\r\n    const client = process.env.NODE_ENV === 'production' ? new_uri : \"ws://localhost:8080/WAR2020/ws/\";\r\n        \r\n    this.websocket = new WebSocket(client + localStorage.getItem('loginInfo'));\r\n\r\n    const url = process.env.NODE_ENV === 'production' ? \"rest/chat/chats/\" : \"http://localhost:8080/ChatWar/rest/chat/chats/\";\r\n    this.websocket.onopen = () => {\r\n      console.log('connected ' + localStorage.getItem('loginInfo'))\r\n      axios.get(url + localStorage.getItem('loginInfo'))\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.setState({chats: response.data})\r\n      });\r\n    }\r\n\r\n    this.websocket.onmessage = evt => {\r\n        // on receiving a message, add it to the list of messages\r\n        console.log('sent')\r\n        axios.get(url + localStorage.getItem('loginInfo'))\r\n        .then(response => {\r\n          console.log(response.data);\r\n          this.setState({chats: response.data})\r\n        });\r\n    }\r\n\r\n    this.websocket.onclose = () => {\r\n        console.log('disconnected')\r\n        this.setState({\r\n            websocket: new WebSocket(client + localStorage.getItem('loginInfo')),\r\n        })\r\n    }\r\n  }\r\n}\r\n\r\nexport default withRouter (withStyles(styles)(DashboardComponent));","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Login from './components/login/login';\nimport Register from './components/register/register';\nimport {HashRouter} from 'react-router-dom'\nimport { Switch, Route } from 'react-router';\nimport Dashboard from './components/dashboard/dashboard';\n\nclass App extends React.Component {\n  /*constructor(props){\n    super(props);\n\n    this.state = {\n      chatsovi: [\n        {\n          participants: [\"batique\", \"perfex021\"],\n          receiverHasRead: false,\n          messages: [\n            {\n              text: \"Hey world!\",\n              sender: \"batique\",\n              date: new Date(2020, 2, 24, 10, 33, 30, 0)\n            },\n            {\n              text: \"Hola amigo!\",\n              sender: \"perfex021\",\n              date: new Date(2020, 2, 24, 10, 34, 30, 0)\n            }\n          ]\n        },\n        {\n          participants: [\"deki\", \"batique\"],\n          receiverHasRead: false,\n          messages: [\n            {\n              text: \"Cao buraz!\",\n              sender: \"deki\",\n              date: new Date(2020, 2, 24, 10, 33, 30, 0)\n            },\n            {\n              text: \"Eee brate!\",\n              sender: \"batique\",\n              date: new Date(2020, 2, 24, 10, 34, 30, 0)\n            }\n          ]\n        },\n        {\n          participants: [\"deki\", \"perfex021\"],\n          receiverHasRead: false,\n          messages: [\n            {\n              text: \"Cao buraz!\",\n              sender: \"deki\",\n              date: new Date(2020, 2, 24, 10, 33, 30, 0)\n            },\n            {\n              text: \"Eee brate!\",\n              sender: \"perfex021\",\n              date: new Date(2020, 2, 24, 10, 34, 30, 0)\n            }\n          ]\n        }\n      ],\n      loggedInUser: \"batique\",\n      users: [\n        {\n          id: 0,\n          username: \"batique\",\n          password: \"batique\"\n        },\n        {\n          id: 1,\n          username: \"perfex021\",\n          password: \"perfex021\"\n        },\n        {\n          id: 2,\n          username: \"rastko\",\n          password: \"rastko\"\n        },\n        {\n          id: 3,\n          username: \"deki\",\n          password: \"deki\"\n        }\n      ],\n      /*groups: [\n        {\n          groupId: 0,\n          participantIds: [0, 1]\n        },\n        {\n          groupId: 1,\n          participantIds: [0, 2]\n        }\n      ],\n      messages: [\n        {\n          messageId: 0,\n          senderId: 0,\n          groupId: 0,\n          text: 'Hello World 1!',\n          date: new Date(2020, 2, 24, 10, 33, 30, 0)\n        },\n        {\n          messageId: 1,\n          senderId: 3,\n          groupId: 0,\n          text: 'Hello World 2!',\n          date: new Date(2020, 2, 24, 10, 34, 30, 0)\n        },\n        {\n          messageId: 2,\n          senderId: 0,\n          groupId: 0,\n          text: 'Hello World 3!',\n          date: new Date(2020, 2, 24, 10, 35, 30, 0)\n        },\n        {\n          messageId: 3,\n          senderId: 2,\n          groupId: 1,\n          text: 'Hello World 4!',\n          date: new Date(2020, 2, 24, 10, 36, 30, 0)\n  \n        },\n        {\n          messageId: 4,\n          senderId: 0,\n          groupId: 1,\n          text: 'Hello World 5!',\n          date: new Date(2020, 2, 24, 10, 37, 30, 0)\n        }\n      ]\n    }\n  }*/\n\n  render(){\n    return (\n      <div id=\"routing-component\">\n        <HashRouter basename=\"/\">\n            <Route exact path=\"/\" component={Login}></Route>\n            <Route exact path=\"/login\" component={Login}></Route>\n            <Route exact path=\"/register\" component={Register}></Route>\n            <Route exact path=\"/dashboard\" component={Dashboard}></Route>\n        </HashRouter >\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}